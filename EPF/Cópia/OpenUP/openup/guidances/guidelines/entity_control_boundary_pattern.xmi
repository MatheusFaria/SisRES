<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-awaQ_2dwhGyKRoVKQ-esPQ" name="finding_analysis_classes,_uF-QYEAhEdq_UJTvM1DM2Q" guid="-awaQ_2dwhGyKRoVKQ-esPQ" changeDate="2007-07-18T11:10:37.552-0300" version="1.0.0">
  <mainDescription>&lt;p>Quando da identificação dos elementos para um cenário de comportamento do sistema, você pode alinhar cada elemento participante a uma das três principais perspectivas: &lt;b>Entidade&lt;/b>, &lt;b>Controle&lt;/b> ou &lt;b>Fronteira&lt;/b>. Embora as especificidades das linguagens, frameworks e heurísticas de design de qualidade, eles irão conduzir o design final, um primeiro corte que cubra o comportamento necessário do sistema pode sempre ser montado com elementos destas três perspectivas.&lt;/p>&#xD;
&lt;p>Este padrão é semelhante ao padrão Modelo Visão Controle (descrito em [&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../openup/guidances/supportingmaterials/references_6CCF393.html#BUS96&quot; guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>BUS96&lt;/a>] e em [&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../../openup/guidances/supportingmaterials/references_6CCF393.html#WIKP-MVC&quot; guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>WIKP-MVC&lt;/a>], dentre outros lugares), mas o Padrão Entidade Controle Fronteira (ECF) não é apenas adequado para lidar com interfaces de usuário, e dá ao Controle um papel um pouco diferente a desempenhar.&lt;/p>&#xD;
&lt;h4 align=&quot;left&quot;>Exemplo do padrão ECF&lt;/h4>&#xD;
&lt;p>&#xD;
     &lt;img alt=&quot;&quot; src=&quot;./resources/ebc_diagram.JPG&quot; />&#xD;
&lt;/p>&#xD;
&lt;h1>Elementos entidade&lt;/h1>&#xD;
&lt;p>Uma entidade é um elemento passivo de longa duração, que é responsável por algumas partes significativas da informação. Não que dizer que as entidades são &quot;dados&quot;, enquanto outros elementos de design são &quot;funções&quot;. As entidades executam o comportamento organizado em torno de alguma quantidade coesa de dados.&lt;/p>&#xD;
&lt;p>Um exemplo de uma entidade para um aplicativo de serviço ao cliente é uma entidade Cliente que gerencie todas as informações sobre um cliente. Um elemento de design para esta entidade deverá incluir dados sobre o cliente, comportamento para gerenciar os dados, comportamento para validar as informações do cliente e para executar outros cálculos de negócio, tal como &quot;Este cliente está habilitado a comprar o produto x?&quot;&lt;/p>&#xD;
&lt;p>A identificação das entidades como parte deste padrão pode ser feita muitas vezes em diferentes níveis de abstração do código, em diferentes níveis de quantidade e, a partir da perspectiva de diferentes contextos. Por exemplo, você pode fazer uma verificação de análise em um cenário de criação de uma campanha de marketing e identificar o elemento cliente com vários elementos de dados do cliente, tais como nome e endereço, bem como vários comportamentos necessários, tais como a gestão dos dados de nome e endereço e a capacidade de avaliar o cliente baseado em algum algoritmo (uma aplicação deste padrão poderia estar abstraída do código, ser genérica e não ter nenhum contexto específico). Mais tarde, você poderia fazer uma verificação no mesmo cenário, aplicando um mecanismo arquitetural para acesso a banco de dados que divide o endereço fora do seu próprio elemento, mova a responsabilidade de armazenar e recuperar clientes para um novo elemento de controle, e identifique decisões específicas de banco de dados, tais como o uso de chaves primárias nas entidades. (Uma aplicação deste padrão poderia estar próxima ao código, ser detalhada e alinhada com um contexto de banco de dados).&lt;/p>&#xD;
&lt;h1>Elementos de controle&lt;/h1>&#xD;
&lt;p>Um elemento de controle gerencia o fluxo de interação do cenário. Um elemento de controle poderia gerenciar todo o comportamento de um cenário. Ou poderia gerenciar as interações entre um subconjunto dos elementos. O comportamento e as regras de negócios relativas às informações relevantes para o cenário devem ser atribuídos às entidades; os elementos de controlo são responsáveis apenas pelo fluxo do cenário.&lt;/p>&#xD;
&lt;p>CriarCampanhaDeMarketing é um exemplo de um elemento de controle para uma aplicação de serviço ao cliente. Este elemento de design responderia a certos elementos de fronteira do front-end e colaboraria com outras entidades, elementos de controle e elementos de fronteira de back-end para suportar a criação de uma campanha de marketing.&lt;/p>&#xD;
&lt;p>Assim como este exemplo de entidade, podem ser necessárias várias verificações para a identificação de elementos de controle. Uma primeira verificação poderia ser uma verificação de análise que identifica um elemento de controle para um cenário, com comportamento para se certificar que o design pode suportar o fluxo de eventos. Uma verificação posterior poderia encontrar controles para gerenciar colaborações reutilizáveis de elementos de baixo nível que irão se associar a uma unidade de código específica a ser escrita.&lt;/p>&#xD;
&lt;h1>Elementos de fronteira&lt;/h1>&#xD;
&lt;p>Um elemento de fronteira está na periferia de um sistema ou subsistema, mas pertence a ele. Para qualquer cenário sendo considerado, em todo o sistema ou em um subsistema, alguns elementos de fronteira serão elementos &quot;front-end&quot; que aceitam entradas de fora da área que está sendo projetada, e outros elementos serão &quot;back-end&quot;, que gerenciam a comunicação para suportar elementos que estejam fora do sistema ou subsistema.&lt;/p>&#xD;
&lt;p>Dois exemplos de elementos de fronteira para um aplicativo de serviço ao cliente podem ser o front-end FormulárioDeCampanhaDeMarketing e o back-end SistemaDeOrçamento. O FormulárioDeCampanhaDeMarketing gerenciaria a troca de informações entre o usuário e o sistema, e o SistemaDeOrçamento gerenciaria a troca de informações entre o sistema e um sistema externo que gerencie orçamentos.&lt;/p>&#xD;
&lt;p>Uma verificação de análise poderia identificar um elemento de fronteira para cada parte externa relevante a um cenário. Posteriormente, elas poderiam ser subdivididas em vários elementos de fronteira ou pequenas comunidades compostas por elementos colaboradores de todos os três estereótipos.&lt;/p>&#xD;
&lt;h1>Percorrendo o cenário&lt;/h1>&#xD;
&lt;p>Você pode percorrer um cenário iniciado por algo fora dos limites do sistema ou subsistema que está sendo projetado e distribuir a responsabilidade para executar o comportamento suportando o cenário para os elementos identificados de cada tipo. Os elementos de design apropriados, responsáveis por cada ação no cenário, estarão de acordo com o que foi descrito na definição de cada tipo de elemento descrito aqui anteriormente.&lt;/p>&#xD;
&lt;p>Além de identificar o comportamento necessário para executar o cenário, a iniciação deste comportamento de elementos de design para elementos de design identifica os relacionamentos necessários. Existem certos relacionamentos adequados entre os elementos participantes. Um elemento pode comunicar-se com outros elementos do mesmo tipo. Os elementos de controle podem se comunicar com cada um dos outros dois tipos, mas os elementos entidade e fronteira não devem se comunicar diretamente.&lt;/p>&#xD;
&lt;p>Esta tabela mostra as ligações adequadas entre os elementos de design.&lt;/p>&#xD;
&lt;table cellspacing=&quot;2&quot; cellpadding=&quot;2&quot; width=&quot;400&quot; summary=&quot;Ligações Adequadas&quot; border=&quot;1&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;th scope=&quot;col&quot;>&#xD;
                &lt;center>Entidade&lt;/center>&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot;>&#xD;
                &lt;center>Fronteira&lt;/center>&#xD;
            &lt;/th>&#xD;
            &lt;th scope=&quot;col&quot;>&#xD;
                &lt;center>Controle&lt;/center>&#xD;
            &lt;/th>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>Entidade&lt;/th>&#xD;
            &lt;td>&#xD;
                &lt;center>&#xD;
                    X&#xD;
                &lt;/center>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;center>&#xD;
                    X&#xD;
                &lt;/center>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>Fronteira&lt;/th>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;center>&#xD;
                    X&#xD;
                &lt;/center>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;th scope=&quot;row&quot;>Controle&lt;/th>&#xD;
            &lt;td>&#xD;
                &lt;center>&#xD;
                    X&#xD;
                &lt;/center>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;center>&#xD;
                    X&#xD;
                &lt;/center>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;center>&#xD;
                    X&#xD;
                &lt;/center>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;p>Ao aplicar este padrão, você pode criar um design robusto que identifica os elementos, o comportamento e os relacionamentos necessários para suportar um cenário.&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
