<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="_4wqaMMPaEdmbOvqy4O0adg" name="transforming_design_into_implementation,_0Y0dsMlgEdmt3adZL5Dmdw" guid="_4wqaMMPaEdmbOvqy4O0adg" authors="Jim Ruehlin" changeDate="2007-07-20T12:43:58.859-0300" version="1.0">
  <mainDescription>&lt;p>&#xD;
    A &lt;b>transformação&lt;/b> do design em código, implementa a estrutura do sistema na linguagem fonte escolhida. Também implementa o comportamento do sistema definido nos requisitos funcionais. &lt;b>Implementar&lt;/b> o comportamento do sistema significa escrever o código que permita que as diferentes partes da aplicação (classes ou componentes) colaborem para realizar o comportamento do sistema.&lt;/p>&#xD;
&lt;p>Existem várias técnicas para transformar automaticamente o design em implementação. Aqui estão alguns exemplos:&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>Os padrões de projeto podem ser aplicados para gerar elementos de design e de código a partir de designs relacionados e implementações. Por exemplo, um padrão de projeto de transformação pode ser aplicado a uma tabela de dados para criar classes Java™ que irão acessar a tabela dos dados. Um outro exemplo é usar um &lt;a href=&quot;http://www.eclipse.org/emf/&quot; target=&quot;_blank&quot;>Framework de Modelagem do Eclipse&lt;/a> para gerar o código necessário para armazenar os dados que combine com o modelo e para gerar uma implementação de interface de usuário para povoar os dados. Um gerador de padrão ou de transformação pode ser usado para criar a implementação, ou esta ser feita à mão. Os geradores de padrões são mais fáceis e confiáveis, mas o código escrito à mão que implementa um padrão definido terá menos erros do que código escrito à mão que implementa um design único ou original.&lt;/li>&#xD;
    &lt;li>Os modelos podem ser detalhados e usados para gerar uma implementação. A estrutura (diagramas de classe e pacote) e os diagramas de comportamento (tais como o diagrama de estado, de atividade e de colaboração) podem ser usados para gerar código executável. Estas versões iniciais podem ser refinadas posteriormente.&lt;/li>&#xD;
    &lt;li>O design pode ser independente de plataforma em vários graus. Os modelos de design específicos de plataforma ou mesmo o código podem ser gerados através das transformações que aplicam várias regras para mapear abstrações de alto nível de elementos específicos de plataforma. Este é o foco da Arquitetura Orientada a Modelo (MDA) do Object Management Group (OMG) &lt;a href=&quot;http://www.omg.org/&quot; target=&quot;_blank&quot;>(http://www.omg.org&lt;/a>).&lt;/li>&#xD;
    &lt;li>Os modelos visuais específicos de uma plataforma podem ser usados para gerar uma estrutura inicial de código. Esta estrutura pode mais tarde ser elaborada com código adicional não especificado no design.&lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>Em todos os casos, entretanto, algumas abstrações de design (classes, componentes, etc.) são detalhadas para transformar-se em implementação.&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
