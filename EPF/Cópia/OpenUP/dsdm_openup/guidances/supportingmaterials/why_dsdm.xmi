<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-oDZcGvl7ovoAHxXACLRdww" name="new_supporting_material,_O2SrYFlfEdul8L-IGeA7TA" guid="-oDZcGvl7ovoAHxXACLRdww" changeDate="2006-10-27T07:11:14.200-0300" version="1.0.0">
  <mainDescription>&lt;p>&#xD;
    DSDM is a vendor-independent method that recognises that more projects fail because of people issues than technology.&#xD;
    The focus is on helping people to work effectively together to achieve the business goals. DSDM is also tool and&#xD;
    technique independent enabling it to be used in any business and technical environment without tying the method users&#xD;
    to any particular vendor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Many system development projects fail to meet the expectations of the end users. Such project failures can be&#xD;
    classified into one of five basic types:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        The system fails to meet the business requirements for which it was developed. The system is either abandoned or&#xD;
        expensive adaptive maintenance is undertaken.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        There are performance shortcomings in the system, which make it inadequate for the users' needs. Again, it is&#xD;
        either abandoned or amended incurring extra costs.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Errors appear in the developed system causing unexpected problems. Patches have to be applied at extra cost.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Users reject the imposition of the system, for political reasons, lack of involvement in its development or lack of&#xD;
        commitment to it.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Systems are initially accepted but over time become impossible to maintain and so pass into disuse.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    DSDM aims to prevent all five types of project failure.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A fundamental assumption of the DSDM approach is that &lt;strong>nothing is built perfectly first time&lt;/strong>, but that&#xD;
    80% of the solution can be produced in 20% of the time that it would take to produce the total solution. A basic&#xD;
    problem with less agile approaches is the expectation that potential system users can predict what all their&#xD;
    requirements will be at some distant point in time. This problem is compounded by the fact that the mere existence of a&#xD;
    new system affects the users' requirements because the methods of working have changed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In the classical, sequential (or &quot;waterfall&quot;) approach, the next step cannot be started until the previous step is&#xD;
    completed and fully tested. In practice, a lot of time is spent in getting from the 80% solution to the total solution,&#xD;
    with the assumption that no step ever needs to be revisited. This means that considerable time is spent going back to&#xD;
    &quot;completed&quot; steps and unravelling the defects from work that has previously been accepted. The result is that projects&#xD;
    are delivered late and over budget or they fail to meet the business needs since time is not spent reworking the&#xD;
    requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    DSDM assumes that all previous steps can be revisited as part of its iterative approach. Therefore, &lt;strong>the current&#xD;
    step need be completed only enough to move to the next step&lt;/strong>, since it can be finished in a later iteration.&#xD;
    The premise is that the business requirements are likely to change anyway as understanding increases, so any further&#xD;
    work would have been wasted!&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Systems built using the DSDM approach address the current and imminent needs of the business&lt;/strong> rather&#xD;
    than the traditional approach of attacking all the perceived possibilities. The resulting system is, therefore,&#xD;
    expected to be a better fit to the true business needs, be easier to test and be more likely to be accepted into the&#xD;
    users' working practices. Since the development cost of most applications is only a small part of the total lifecycle&#xD;
    costs, it makes sense to build simpler systems that are fit for purpose and easier to maintain and modify after their&#xD;
    initial development. The latter is possible since maintenance can be treated as a further incremental delivery towards&#xD;
    the total solution.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>DSDM is not only about developing new systems&lt;/strong>. Enhancements to existing systems can be created using&#xD;
    DSDM.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
