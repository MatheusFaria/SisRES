<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-0R8BZWlcCQ3Rj84jY2M3Kw" name="new_concept,_O1kAANvfEduv2KOT-Teh6w" guid="-0R8BZWlcCQ3Rj84jY2M3Kw" changeDate="2007-05-01T12:48:59.365-0300" version="1.0.0">
  <mainDescription>&lt;p>Uma arquitetura executável é uma&lt;a class=&quot;elementLink&quot; href=&quot;./../../../openup/workproducts/build_95D7D8FD.html&quot; guid=&quot;_0YuXEMlgEdmt3adZL5Dmdw&quot;>Construção&lt;/a> que realiza um subconjunto da arquitetura. Esta construção é utilizada para validar que um subconjunto dos &lt;a class=&quot;elementLink&quot; href=&quot;./../../../openup/guidances/concepts/architecturally_significant_requirements_1EE5D757.html&quot; guid=&quot;_HrZGIA4MEduibvKwrGxWxA&quot;>Requisitos Arquiteturalmente Significantes&lt;/a> está corretamente implantada. O subconjunto irá incluir todos os requisitos arquiteturalmente significantes quando a arquitetura estiver completa. Isto valida a arquitetura como um todo integrado através dos testes de integração. A equipe obtém feedback, do cliente ou dos Stakeholders, a respeito da arquitetura, submetendo a arquitetura executável para verificação. Desta forma a arquitetura executável ajuda a garantir que a funcionalidade essencial está suficientemente estável para construir o restante do sistema.&lt;/p>&#xD;
&lt;p>Uma arquitetura executável não é um produto de trabalho. É uma identificação ou um atributo de uma construção indicando que a construção contém funcionalidade arquiteturalmente significante estável.&lt;/p>&#xD;
&lt;p>Cada versão de uma arquitetura executável deve ser mais completa e robusta do que as versões anteriores. A arquitetura executável final contém todos os elementos que compõem a arquitetura e deve validar todos os requisitos arquiteturalmente significantes. Podem existir raras exceções em que uma parte da arquitetura não possa ser implementada até que incontroláveis circunstâncias como restrições com software de terceiros ou recursos únicos que não estão disponíveis. Retardar qualquer parte da arquitetura deve ser evitado, uma vez que aumenta significativamente o risco técnico no fim do projeto. Mas, se as circunstâncias exigirem que algum risco arquitetural não possa ser atenuado até o final do desenvolvimento, uma decisão consciente pode ser tomada para levar em frente este risco até que a arquitetura possa ser implementada integralmente. Neste caso, a arquitetura executável não irá conter todo a &lt;a class=&quot;elementLink&quot; href=&quot;./../../../openup/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Arquitetura de Software&lt;/a>.&lt;/p>&#xD;
&lt;p>Também é possível incluir elementos não-arquiteturais em uma arquitetura executável. Isto é mais provável de acontecer quando se aborda questões de alto risco no início do ciclo de desenvolvimento, o que é uma excelente prática. Dois exemplos de riscos não-técnicos são riscos de recursos e riscos concorrentes. Pode ser desejável obter um recurso difícil-de-ter o mais cedo possível de forma que eles possam trabalhar em uma única peça de software, ao invés de esperar que o recurso esteja disponível mais tarde. Ou pode ser útil implementar e implantar algumas características prematuras para manter sua participação no mercado contra um concorrente. Pense na arquitetura executável como uma forma de atenuar o risco arquitetural, que é o risco técnico mais importante em um projeto. Deste ponto de vista, é apropriado atenuar outros riscos na arquitetura executável.&lt;/p>&#xD;
&lt;p>A diferença entre a arquitetura executável e uma construção do final do ciclo de desenvolvimento é que a arquitetura executável é o resultado de um período de desenvolvimento (por exemplo, uma iteração), que é dedicada para elaborar a arquitetura. As iterações tardias são construídas sob a arquitetura executável, mas não são assinaladas como arquitetura executável porque elas estendem a funcionalidade do sistema, além do framework arquitetural.&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
